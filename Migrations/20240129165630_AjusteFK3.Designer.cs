// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaBancarioWebAPI.DataContext;

#nullable disable

namespace SistemaBancarioWebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240129165630_AjusteFK3")]
    partial class AjusteFK3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.CartaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cvv")
                        .HasMaxLength(3)
                        .HasColumnType("int")
                        .HasColumnName("cvv");

                    b.Property<DateTime>("DataValidadeCartao")
                        .HasColumnType("date")
                        .HasColumnName("data_validade");

                    b.Property<string>("NumeroCartao")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("numero_cartao");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("tb_cartoes", (string)null);
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.ContaCorrenteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroContaCorrente")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("numero_conta");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId")
                        .IsUnique();

                    b.ToTable("tb_conta_corrente", (string)null);
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.PessoaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("tb_pessoas", (string)null);
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.SaldoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoConta")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("saldo_conta");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId")
                        .IsUnique();

                    b.ToTable("tb_saldo", (string)null);
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.TransacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContaCorrenteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("date")
                        .HasColumnName("data_compra");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int")
                        .HasColumnName("forma_pagamento");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("situacao");

                    b.Property<decimal>("ValorCompra")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valor_compra");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId")
                        .IsUnique();

                    b.ToTable("his_transacao", (string)null);
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.CartaoModel", b =>
                {
                    b.HasOne("SistemaBancarioWebAPI.Models.PessoaModel", "Pessoa")
                        .WithOne("Cartao")
                        .HasForeignKey("SistemaBancarioWebAPI.Models.CartaoModel", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.ContaCorrenteModel", b =>
                {
                    b.HasOne("SistemaBancarioWebAPI.Models.CartaoModel", "Cartao")
                        .WithOne("ContaCorrente")
                        .HasForeignKey("SistemaBancarioWebAPI.Models.ContaCorrenteModel", "CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.SaldoModel", b =>
                {
                    b.HasOne("SistemaBancarioWebAPI.Models.ContaCorrenteModel", "ContaCorrente")
                        .WithOne("Saldo")
                        .HasForeignKey("SistemaBancarioWebAPI.Models.SaldoModel", "ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.TransacaoModel", b =>
                {
                    b.HasOne("SistemaBancarioWebAPI.Models.ContaCorrenteModel", "ContaCorrente")
                        .WithOne("Transacao")
                        .HasForeignKey("SistemaBancarioWebAPI.Models.TransacaoModel", "ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.CartaoModel", b =>
                {
                    b.Navigation("ContaCorrente")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.ContaCorrenteModel", b =>
                {
                    b.Navigation("Saldo")
                        .IsRequired();

                    b.Navigation("Transacao")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaBancarioWebAPI.Models.PessoaModel", b =>
                {
                    b.Navigation("Cartao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
